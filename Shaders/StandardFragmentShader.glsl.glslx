#version 330

uniform vec2 iResolution; //[xResolution, yResolution] of display
uniform float iGlobalTime; //global time in seconds as float
uniform float startTime; //Time the shader was first activated on this object
uniform float direction; //Positive => up/right; Negative => down/left
uniform float lifetime; //How long the effect will be visible
uniform vec3 desiredColor;
	
in vec2 uv;

void main()
{
    //create uv to be in the range [0..1]x[0..1]
	//vec2 uv = gl_FragCoord.xy / iResolution;

    //gl_FragColor = vec4(vec3(min(distance(uv, vec2(1)), distance(uv, vec2(0)))), 1);

    //gl_FragColor = vec4(uv, 0, 1);
    //return;

    //gl_FragColor = vec4(1, 1, 1, 1);

    //Is the orange which is defined in System.Drawings.Color
    vec4 color = vec4(desiredColor, 1);

    if(direction > 0.0) 
    {
        color.a = uv.x + 0.5;
    }
    else
    {
        color.a = 1.5 - uv.x;
    }

    //color.a is 1.5 at maximum (only 1 is to clamped)
    color.a -= (iGlobalTime - startTime) / (1.5 / (1.0 / lifetime));

	gl_FragColor = color;
}