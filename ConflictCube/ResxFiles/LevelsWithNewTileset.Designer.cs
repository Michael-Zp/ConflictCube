//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConflictCube.ResxFiles {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LevelsWithNewTileset {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LevelsWithNewTileset() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ConflictCube.ResxFiles.LevelsWithNewTileset", typeof(LevelsWithNewTileset).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;map version=&quot;1.0&quot; tiledversion=&quot;1.0.3&quot; orientation=&quot;orthogonal&quot; renderorder=&quot;right-down&quot; width=&quot;4&quot; height=&quot;10&quot; tilewidth=&quot;64&quot; tileheight=&quot;64&quot; nextobjectid=&quot;1&quot;&gt;
        /// &lt;tileset firstgid=&quot;1&quot; source=&quot;../../ConflictCube/Textures/ConCubeTileset.tsx&quot;/&gt;
        /// &lt;layer name=&quot;Floor&quot; width=&quot;4&quot; height=&quot;10&quot;&gt;
        ///  &lt;data encoding=&quot;csv&quot;&gt;
        ///1,1,1,1,
        ///4,2,2,4,
        ///4,2,2,4,
        ///4,2,2,4,
        ///4,2,2,4,
        ///4,2,2,4,
        ///4,2,2,4,
        ///4,2,2,4,
        ///4,2,2,4,
        ///4,2,2,4
        ///&lt;/data&gt;
        /// &lt;/layer&gt;
        /// &lt;layer name=&quot;Buttons&quot; width=&quot;4&quot; height [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string FireIceFirstTestNewTileset {
            get {
                return ResourceManager.GetString("FireIceFirstTestNewTileset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;map version=&quot;1.0&quot; tiledversion=&quot;1.0.3&quot; orientation=&quot;orthogonal&quot; renderorder=&quot;right-down&quot; width=&quot;4&quot; height=&quot;10&quot; tilewidth=&quot;64&quot; tileheight=&quot;64&quot; nextobjectid=&quot;1&quot;&gt;
        /// &lt;tileset firstgid=&quot;1&quot; source=&quot;../../ConflictCube/Textures/ConCubeTileset.tsx&quot;/&gt;
        /// &lt;layer name=&quot;Floor&quot; width=&quot;4&quot; height=&quot;10&quot;&gt;
        ///  &lt;data encoding=&quot;csv&quot;&gt;
        ///1,1,1,1,
        ///2,2,2,9,
        ///2,44,44,34,
        ///43,5,2,30,
        ///43,43,2,19,
        ///43,4,44,18,
        ///43,32,44,33,
        ///43,36,44,23,
        ///43,34,44,22,
        ///43,43,2,12
        ///&lt;/data&gt;
        /// &lt;/layer&gt;
        /// &lt;layer name= [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string FireIceSecondTestNewTileset {
            get {
                return ResourceManager.GetString("FireIceSecondTestNewTileset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;map version=&quot;1.0&quot; tiledversion=&quot;1.0.3&quot; orientation=&quot;orthogonal&quot; renderorder=&quot;right-down&quot; width=&quot;5&quot; height=&quot;5&quot; tilewidth=&quot;64&quot; tileheight=&quot;64&quot; nextobjectid=&quot;1&quot;&gt;
        /// &lt;tileset firstgid=&quot;1&quot; source=&quot;../../ConflictCube/Textures/ConCubeTileset.tsx&quot;/&gt;
        /// &lt;layer name=&quot;Floor&quot; width=&quot;5&quot; height=&quot;5&quot;&gt;
        ///  &lt;data encoding=&quot;csv&quot;&gt;
        ///33,1,21,19,1,
        ///2,2,16,2,18,
        ///44,17,40,2,20,
        ///2,43,20,43,2,
        ///33,43,2,44,2
        ///&lt;/data&gt;
        /// &lt;/layer&gt;
        /// &lt;layer name=&quot;Buttons&quot; width=&quot;5&quot; height=&quot;5&quot;&gt;
        ///  &lt;data encoding=&quot;cs [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string level1 {
            get {
                return ResourceManager.GetString("level1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;map version=&quot;1.0&quot; tiledversion=&quot;1.0.3&quot; orientation=&quot;orthogonal&quot; renderorder=&quot;right-down&quot; width=&quot;15&quot; height=&quot;15&quot; tilewidth=&quot;64&quot; tileheight=&quot;64&quot; nextobjectid=&quot;1&quot;&gt;
        /// &lt;tileset firstgid=&quot;1&quot; source=&quot;../../ConflictCube/Textures/ConCubeTileset.tsx&quot;/&gt;
        /// &lt;layer name=&quot;Floor&quot; width=&quot;15&quot; height=&quot;15&quot;&gt;
        ///  &lt;data encoding=&quot;csv&quot;&gt;
        ///2,2,2,6,2,2,2,9,3,3,3,3,31,27,10,
        ///2,6,2,8,2,6,2,4,2,2,2,2,30,21,28,
        ///2,4,2,2,2,4,2,8,2,9,7,2,12,29,32,
        ///2,12,3,3,3,26,10,2,2,8,2,2,2,2,4,
        ///2,2,2,2,2,34,26, [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string level3 {
            get {
                return ResourceManager.GetString("level3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;map version=&quot;1.0&quot; tiledversion=&quot;1.0.3&quot; orientation=&quot;orthogonal&quot; renderorder=&quot;right-down&quot; width=&quot;5&quot; height=&quot;15&quot; tilewidth=&quot;64&quot; tileheight=&quot;64&quot; nextobjectid=&quot;1&quot;&gt;
        /// &lt;tileset firstgid=&quot;1&quot; source=&quot;../../ConflictCube/Textures/ConCubeTileset.tsx&quot;/&gt;
        /// &lt;layer name=&quot;Floor&quot; width=&quot;5&quot; height=&quot;15&quot;&gt;
        ///  &lt;data encoding=&quot;csv&quot;&gt;
        ///1,1,1,1,1,
        ///5,3,31,3,7,
        ///2,2,4,2,2,
        ///2,2,4,2,2,
        ///2,9,26,10,2,
        ///2,34,33,11,2,
        ///2,4,44,44,44,
        ///2,4,2,43,43,
        ///43,12,3,10,43,
        ///43,43,43,4,43,
        ///6,44,2,8,43,
        ///4,44, [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string tutlevel {
            get {
                return ResourceManager.GetString("tutlevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;map version=&quot;1.0&quot; tiledversion=&quot;1.0.3&quot; orientation=&quot;orthogonal&quot; renderorder=&quot;right-down&quot; width=&quot;8&quot; height=&quot;8&quot; tilewidth=&quot;64&quot; tileheight=&quot;64&quot; nextobjectid=&quot;1&quot;&gt;
        /// &lt;tileset firstgid=&quot;1&quot; source=&quot;../../ConflictCube/Textures/ConCubeTileset.tsx&quot;/&gt;
        /// &lt;layer name=&quot;Floor&quot; width=&quot;8&quot; height=&quot;8&quot;&gt;
        ///  &lt;data encoding=&quot;csv&quot;&gt;
        ///1,1,1,1,1,1,1,1,
        ///2,2,2,2,2,2,2,2,
        ///2,2,2,2,2,2,2,2,
        ///2,2,2,2,2,2,2,2,
        ///3,3,3,3,3,2,2,2,
        ///43,43,43,43,4,2,2,2,
        ///8,43,19,10,4,2,2,2,
        ///2,43,25,2,2,2,2,2
        ///&lt;/data&gt;        /// [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string XShiftTest {
            get {
                return ResourceManager.GetString("XShiftTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;map version=&quot;1.0&quot; tiledversion=&quot;1.0.3&quot; orientation=&quot;orthogonal&quot; renderorder=&quot;right-down&quot; width=&quot;3&quot; height=&quot;8&quot; tilewidth=&quot;64&quot; tileheight=&quot;64&quot; nextobjectid=&quot;1&quot;&gt;
        /// &lt;tileset firstgid=&quot;1&quot; source=&quot;../../ConflictCube/Textures/ConCubeTileset.tsx&quot;/&gt;
        /// &lt;layer name=&quot;Floor&quot; width=&quot;3&quot; height=&quot;8&quot;&gt;
        ///  &lt;data encoding=&quot;csv&quot;&gt;
        ///1,1,1,
        ///2,2,2,
        ///2,2,2,
        ///10,2,30,
        ///43,2,43,
        ///43,43,43,
        ///43,43,43,
        ///2,6,12
        ///&lt;/data&gt;
        /// &lt;/layer&gt;
        /// &lt;layer name=&quot;Buttons&quot; width=&quot;3&quot; height=&quot;8&quot;&gt;
        ///  &lt;data encoding=&quot;cs [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string XYShiftTest {
            get {
                return ResourceManager.GetString("XYShiftTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        ///&lt;map version=&quot;1.0&quot; tiledversion=&quot;1.0.3&quot; orientation=&quot;orthogonal&quot; renderorder=&quot;right-down&quot; width=&quot;3&quot; height=&quot;8&quot; tilewidth=&quot;64&quot; tileheight=&quot;64&quot; nextobjectid=&quot;1&quot;&gt;
        /// &lt;tileset firstgid=&quot;1&quot; source=&quot;../../ConflictCube/Textures/ConCubeTileset.tsx&quot;/&gt;
        /// &lt;layer name=&quot;Floor&quot; width=&quot;3&quot; height=&quot;8&quot;&gt;
        ///  &lt;data encoding=&quot;csv&quot;&gt;
        ///1,1,1,
        ///2,2,2,
        ///2,2,2,
        ///2,2,2,
        ///2,18,10,
        ///2,12,43,
        ///37,41,43,
        ///2,2,43
        ///&lt;/data&gt;
        /// &lt;/layer&gt;
        /// &lt;layer name=&quot;Buttons&quot; width=&quot;3&quot; height=&quot;8&quot;&gt;
        ///  &lt;data encoding=&quot;csv&quot;&gt; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string YShiftTest {
            get {
                return ResourceManager.GetString("YShiftTest", resourceCulture);
            }
        }
    }
}
